variables:
  - group: Secrets
  - name: code_tests_path
    value: '$(Build.SourcesDirectory)/out/test'
  - name: code_tests_workspace
    value: '$(Build.SourcesDirectory)/src/test/testfiles'

trigger:
  branches:
    include: ['*']
  tags:
    include: ['v*']

jobs:
  - job: Windows
    pool:
      name: Hosted VS2017
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - script: npm run compile
        displayName: 'Compile'
      - script: |
          npm run test-compile
          npm run test
        displayName: 'Run tests'
  - job: macOS
    pool:
      name: Hosted macOS
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - script: |
          npm run tslint
          npm run test-compile
          npm run test
        displayName: 'Run tests'
      - script: npm run compile
        displayName: 'Compile'
  - job: Linux
    pool:
      name: Hosted Ubuntu 1604
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - script: |
          set -e
          /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
          disown -ar
        displayName: 'Start xvfb'
      - script: |
          npm run tslint
          npm run test-compile
          npm run test
        displayName: 'Run tests'
        env:
          DISPLAY: :10
      - script: 'bash <(curl -s https://codecov.io/bash)'
        displayName: 'Publish test results'
        env:
          CODECOV_TOKEN: '$(CODECOV_IO_TOKEN)'
      - script: npm run compile
        displayName: 'Compile'
      - task: Npm@1
        inputs:
          command: custom
          verbose: false
          customCommand: 'run package'
        displayName: Package extension
      - task: CopyFiles@2
        inputs:
          contents: '*.vsix'
          targetFolder: $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: 'timing-linux-$(Build.SourceVersion)'
