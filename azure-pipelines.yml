variables:
  - group: Secrets
  - name: code_tests_path
    value: '$(Build.SourcesDirectory)/out/test'
  - name: code_tests_workspace
    value: '$(Build.SourcesDirectory)/src/test/testfiles'

trigger:
  branches:
    include: ['*']
  tags:
    include: ['v*']

jobs:
  - job: Windows
    pool:
      name: Hosted VS2017
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - script: npm run compile
        displayName: 'Compile'
      - script: |
          npm run test-compile
          npm run test
        displayName: 'Run tests'
  - job: macOS
    pool:
      name: Hosted macOS
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - script: |
          npm run tslint
          npm run test-compile
          npm run test
        displayName: 'Run tests'
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: '**/test-results.xml'
      - script: 'bash <(curl -s https://codecov.io/bash)'
        displayName: 'Publish coverage results to codecov.io'
        env:
          CODECOV_TOKEN: '$(CODECOV_IO_TOKEN)'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
          displayName: Publish coverage results to TFS server
      - script: npm run compile
        displayName: 'Compile'
  - job: Linux
    pool:
      name: Hosted Ubuntu 1604
      demands:
      - npm
      - curl
    steps:
      - script: |
          curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer $(System.AccessToken)" -d '{"variables": {"currentTag": {"value": "'"$(git tag --points-at HEAD)"'"}},"type": "Vsts","name": "Git","description": "Updated current tag via CI at '"$(date --rfc-3339 seconds)"'"}' https://dev.azure.com/HaaLeo/vscode-timing/_apis/distributedtask/variablegroups/2?api-version=5.0-preview.1
        displayName: Update variable
      - task: CopyFiles@2
        inputs:
          contents: '**/*'
          targetFolder: $(Build.ArtifactStagingDirectory)
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - script: |
          npm run tslint
          npm run test-compile
          npm run test
        displayName: 'Run tests'
        env:
          DISPLAY: :10
      - script: npm run compile
        displayName: 'Compile'
      - task: Npm@1
        inputs:
          command: custom
          verbose: false
          customCommand: 'run package'
        displayName: Package extension
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: 'timing-linux-$(Build.SourceVersion)'
